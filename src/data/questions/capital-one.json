[
  {
    "category": "Java",
    "question": "What is the difference between HashMap and ConcurrentHashMap?",
    "answer": "HashMap is not thread-safe; ConcurrentHashMap supports concurrent updates via internal partitioning and atomic operations."
  },
  {
    "category": "SQL",
    "question": "INNER JOIN vs LEFT JOIN?",
    "answer": "INNER JOIN returns matching rows across tables; LEFT JOIN returns all rows from the left table plus matches from the right."
  },
  {
    "category": "System Design",
    "question": "How would you design a scalable system for this domain?",
    "answer": "Discuss services, data model, storage, caching, messaging, failure handling, and observability."
  },
  {
    "category": "Coding",
    "question": "Solve the Move Zeros to Front problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "AWS",
    "question": "Explain EC2 vs Lambda.",
    "answer": "EC2 provides long-running VMs with full control. Lambda is serverless, event-driven with auto-scaling and per-invocation billing."
  },
  {
    "category": "Spring Boot",
    "question": "How does dependency injection work in Spring Boot?",
    "answer": "Beans are auto-wired by type or name using the IoC container. Prefer constructor injection; use @Component/@Service and @Configuration."
  },
  {
    "category": "Coding",
    "question": "Solve the but encountered an error in the last one problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "React",
    "question": "Functional vs class components?",
    "answer": "Functional components use hooks; classes use lifecycle methods. Hooks improve composition and conciseness."
  },
  {
    "category": "Coding",
    "question": "Solve the and answerd all of the java problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the involving streams and average age problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Kafka",
    "question": "When would you prefer Kafka over traditional queues?",
    "answer": "When you need high-throughput, scalable, persistent streams with consumer groups and replayability."
  },
  {
    "category": "Coding",
    "question": "Solve the for SimpleStorageSystem and explained problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the for designing a Banking System and problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the FindDuplicatesConstantSpace problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the StringReversal and VowelCounter problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the we should receve positive feedback problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the for problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the for callback function and increment count problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Angular",
    "question": "What problem does RxJS solve in Angular?",
    "answer": "Reactive streams for async data with operators for transformation, error handling, and cancellation."
  },
  {
    "category": "Coding",
    "question": "Solve the with 100 problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the for FizzBuzz and also designed an API for problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the for PalindromeCheck and also answered problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  },
  {
    "category": "Coding",
    "question": "Solve the and 100 problem.",
    "answer": "Implement an optimized solution, explain complexity, and cover edge cases."
  }
]